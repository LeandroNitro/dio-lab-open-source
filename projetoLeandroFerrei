# projeto de contribuição

Bem-vindo ao meu repositório! Sou Leandro ferreira, tenho 18 anos de idade e sou estudande no segundo semestre de ciências da computação. minha jornada no campo da programação é recente, logo não tenho nenhuma experiência na área.

#SOBRE

Este projeto é focado em listar alguns "codigos" para te ajudar. Abaixo você encontrará informações sobre como clonar, contribuir e uma lista de comandos Git úteis para a comunidade.

#INICIO

1. Clone o repositório para sua máquina local:

    ```bash
    git clone https://github.com/usuario/repositorio.git
    ```

2. Navegue até o diretório do projeto:

    ```bash
    cd nome-do-repositorio
    ```

3. Instale as dependências necessárias:

    ```bash
    [instruções de instalação específicas]
    ```

## Comandos Git

Abaixo estão alguns comandos Git comuns e úteis para o desenvolvimento colaborativo:

### Configuração inicial

- **Configurar nome e e-mail global:**

    ```bash
    git config --global user.name "Seu Nome"
    git config --global user.email "seuemail@example.com"
    ```

- **Verificar configurações:**

    ```bash
    git config --list
    ```

### Fluxo básico de trabalho

- **Clonar repositório:**

    ```bash
    git clone https://github.com/usuario/repositorio.git
    ```

- **Verificar status do repositório:**

    ```bash
    git status
    ```

- **Adicionar arquivos ao estágio:**

    ```bash
    git add .
    ```

- **Confirmar alterações:**

    ```bash
    git commit -m "Mensagem descritiva"
    ```

- **Enviar alterações para o repositório remoto:**

    ```bash
    git push origin branch
    ```

- **Puxar alterações do repositório remoto:**

    ```bash
    git pull origin branch
    ```

### Trabalhando com branches

- **Criar uma nova branch:**

    ```bash
    git checkout -b nova-branch
    ```

- **Trocar para uma branch existente:**

    ```bash
    git checkout nome-da-branch
    ```

- **Ver todas as branches:**

    ```bash
    git branch
    ```

- **Excluir uma branch:**

    ```bash
    git branch -d nome-da-branch
    ```

- **Enviar uma nova branch para o repositório remoto:**

    ```bash
    git push origin nova-branch
    ```

### Sincronização e fusões

- **Fazer o merge de uma branch com outra:**

    ```bash
    git merge nome-da-branch
    ```

- **Rebase de uma branch:**

    ```bash
    git rebase nome-da-branch
    ```

### Resolvendo conflitos

- **Exibir arquivos em conflito:**

    ```bash
    git diff --name-only --diff-filter=U
    ```

- **Marcar conflito como resolvido:**

    ```bash
    git add arquivo-com-confl
